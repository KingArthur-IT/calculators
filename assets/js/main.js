"use strict";

/* SLIDE UP */
var slideUp = function slideUp(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
  target.style.transitionProperty = 'height, margin, padding';
  target.style.transitionDuration = duration + 'ms';
  target.style.boxSizing = 'border-box';
  target.style.height = target.offsetHeight + 'px';
  target.offsetHeight;
  target.style.overflow = 'hidden';
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  window.setTimeout(() => {
    target.style.display = 'none';
    target.style.removeProperty('height');
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    target.style.removeProperty('overflow');
    target.style.removeProperty('transition-duration');
    target.style.removeProperty('transition-property'); //alert("!")
  }, duration);
};
/* SLIDE DOWN */


var slideDown = function slideDown(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
  target.style.removeProperty('display');
  var display = window.getComputedStyle(target).display;
  if (display === 'none') display = 'block';
  target.style.display = display;
  var height = target.offsetHeight;
  target.style.overflow = 'hidden';
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  target.offsetHeight;
  target.style.boxSizing = 'border-box';
  target.style.transitionProperty = "height, margin, padding";
  target.style.transitionDuration = duration + 'ms';
  target.style.height = height + 'px';
  target.style.removeProperty('padding-top');
  target.style.removeProperty('padding-bottom');
  target.style.removeProperty('margin-top');
  target.style.removeProperty('margin-bottom');
  window.setTimeout(() => {
    target.style.removeProperty('height');
    target.style.removeProperty('overflow');
    target.style.removeProperty('transition-duration');
    target.style.removeProperty('transition-property');
  }, duration);
};
/* TOOGGLE */


var slideToggle = function slideToggle(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;

  if (window.getComputedStyle(target).display === 'none') {
    return slideDown(target, duration);
  } else {
    return slideUp(target, duration);
  }
};

(function ($) {
  $(document).ready(function () {
    svg4everybody({});
  });
})(jQuery);

window.addEventListener("resize", function () {
  var vh = window.innerHeight * 0.01; // Then we set the value in the --vh custom property to the root of the document

  document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
});
window.addEventListener("load", function () {
  var body = this.document.querySelector("body");
  var html = this.document.querySelector("html");
  var vh = window.innerHeight * 0.01; // Then we set the value in the --vh custom property to the root of the document

  document.documentElement.style.setProperty('--vh', "".concat(vh, "px")); // // aos

  setTimeout(function () {
    AOS.init({
      duration: 800,
      once: true
    });
  }, 10); // // aos end
  // header menu

  var headerBurger = document.querySelector(".header__burger");
  var headerMenu = document.querySelector(".header__menu");

  if (headerBurger && headerMenu) {
    headerBurger.addEventListener("click", function () {
      headerBurger.classList.toggle("active");
      headerMenu.classList.toggle("active");
      body.classList.toggle("lock");
      html.classList.toggle("lock");
    });
    window.addEventListener("resize", function () {
      if (window.innerWidth > 1024 && headerMenu.classList.contains("active")) {
        headerBurger.classList.remove("active");
        headerMenu.classList.remove("active");
        body.classList.remove("lock");
        html.classList.remove("lock");
      }
    }); // header links

    var headerLinks = headerMenu.querySelectorAll(".header__link");

    if (headerLinks) {
      headerLinks.forEach(link => {
        var triggerLink = link.querySelector(".trigger");
        var menuLink = link.querySelector(".header-link__menu");

        if (triggerLink && menuLink) {
          triggerLink.addEventListener("click", function () {
            if (window.innerWidth <= 1024) {
              triggerLink.classList.toggle("active");
              slideToggle(menuLink, 300);
            }
          });
          window.addEventListener("resize", function () {
            if (window.innerWidth > 1024 && menuLink.hasAttribute("style")) {
              triggerLink.classList.remove("active");
              menuLink.removeAttribute("style");
            }
          });
        }
      });
    } // header links end

  } // header menu end
  // faq


  var faqItems = document.querySelectorAll(".faq__item ");

  if (faqItems) {
    faqItems.forEach(faq => {
      var faqTrigger = faq.querySelector(".faq__trigger ");
      var faqContent = faq.querySelector(".faq__content ");

      if (faqContent && faqTrigger) {
        faqTrigger.addEventListener("click", function () {
          faqTrigger.classList.toggle("active");
          slideToggle(faqContent, 300);
        });
      }
    });
  } // faq end
  // sliders
  // slider review


  var swiperReview = new Swiper(".review__slider  .swiper-container", {
    navigation: {
      nextEl: ".review__slider .swiper-button-nextt",
      prevEl: ".review__slider .swiper-button-prevv"
    },
    slidesPerView: 1,
    spaceBetween: 20,
    slidesPerGroup: 1,
    speed: 700,
    breakpoints: {
      1451: {
        slidesPerView: 2,
        spaceBetween: 45,
        slidesPerGroup: 1
      },
      1301: {
        slidesPerView: 2,
        spaceBetween: 30,
        slidesPerGroup: 1
      },
      1025: {
        slidesPerView: 1,
        spaceBetween: 20,
        slidesPerGroup: 1
      },
      577: {
        slidesPerView: 2,
        spaceBetween: 20,
        slidesPerGroup: 1
      }
    }
  }); // slider review end
  // sliders end
  //validate

  var forms = document.querySelectorAll(".form-container");
  forms && forms.forEach(item => {
    var email = item.querySelector(".mail");

    if (email) {
      var parent = email.closest(".form-item");
      var pattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
      email.addEventListener("keyup", function (ev) {
        ev.stopPropagation();
        var value = email.value;

        if (value.match(pattern)) {
          parent.classList.remove("error__email");
        } else {
          parent.classList.add("error__email");
        }

        if (value.length < 1) {
          parent.classList.remove("error__email");
        }
      });
    }

    item.addEventListener('submit', function (e) {
      e.preventDefault();
      var valide = true;
      var inputs = item.querySelectorAll('.form-required');
      var inputsForm = item.querySelectorAll('.form-input');
      inputs.forEach(element => {
        var parent = element.closest('.form-item');
        var form = element.closest(".folow__form");

        if (element.value.trim() === '') {
          parent.classList.add('error');

          if (form) {
            form.classList.add("error");
          }

          valide = false;
        } else {
          parent.classList.remove('error');

          if (form) {
            form.classList.remove("error");
          }
        }
      });

      if (item.classList.contains("mail-form")) {
        var _email = item.querySelector(".mail");

        var formItem = _email.closest(".form-item");

        if (formItem.classList.contains("error__email")) {
          valide = false;
        }
      }

      if (valide) {
        fetch('https://jsonplaceholder.typicode.com/posts', {
          method: 'POST',
          body: new FormData(item)
        }).then(function (response) {
          if (response.ok) {
            return response.json();
          }

          return Promise.reject(response);
        }).then(function (data) {})["catch"](function (error) {
          console.warn(error);
        });
        inputs.forEach(element => {
          element.value = "";
        });
        inputsForm.forEach(element => {
          element.value = "";
        });
      }
    });
  });
  var inputs = document.querySelectorAll('.form-item');

  var _loop = function _loop(i) {
    inputs[i].addEventListener("input", function () {
      var form = inputs[i].closest(".folow__form");

      if (form) {
        form.classList.remove("error");
      }

      inputs[i].classList.remove("error");
    });
  };

  for (var i = 0; i < inputs.length; i++) {
    _loop(i);
  } // validate end
  // filter buttons


  var filterButtons = document.querySelectorAll(".filter__btn");

  if (filterButtons) {
    filterButtons.forEach(btn => {
      btn.addEventListener("click", function () {
        filterButtons.forEach(el => {
          el.classList.remove("active");
        });
        btn.classList.add('active');
      });
    });
  } // filter end

});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
